#spring:
#  profiles:
#    active: ${DOCKER_MODE:dev}
#---
#开发环境配置
#spring:
#  profiles: dev
#  cloud:
#    config:
#      uri: http://localhost:1411/
#      profile: dev
#      label: master
spring:
  application:
    name:  aurora-discovery
  cloud:
    inetutils:
      default-ip-address:  192.168.109.100
server:
  port: 8671

eureka:
  instance:
    hostname: 192.168.109.100
    lease-expiration-duration-in-seconds: 15 #服务过期时间配置,超过这个时间没有接收到心跳EurekaServer就会将这个实例剔除 默认90s
  #服务刷新时间配置，每隔这个时间会主动心跳一次 默认30s
    lease-renewal-interval-in-seconds: 5
    prefer-ip-address: true
    ##instance-id: ${spring.application.name}:${spring.cloud.client.ipAddress}:${server.port}
    instance-id: ${spring.application.name}:${spring.cloud.client.ipAddress}:${server.port}

  client:
    #eureka client刷新本地缓存时间
    registryFetchIntervalSeconds: 5
    ##是否注册 一般集群内互相注册
    registerWithEureka: false
    #是否拉取注册列表 单击不拉取
    fetchRegistry: false

    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/
  server:
    #eureka server刷新readCacheMap的时间，注意，client读取的是readCacheMap，这个时间决定了多久会把readWriteCacheMap的缓存更新到readCacheMap上
    responseCacheUpdateInvervalMs: 3000
    #eureka server缓存readWriteCacheMap失效时间，这个只有在这个时间过去后缓存才会失效，失效前不会更新，过期后从registry重新读取注册服务信息，registry是一个ConcurrentHashMap。
    responseCacheAutoExpirationInSeconds: 180
    #启用主动失效，并且每次主动失效检测间隔为3s
    eviction-interval-timer-in-ms: 3000

#ribbon:
#  #eureka客户端ribbon刷新时间
#  ServerListRefreshInterval: 5000

